// for the smaller stuff
// these aren't necessarily reusable in this project
// - just easiest way to organize these

// ======= LOGO =========
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

//======== SEARCH ==========
.search {
  // for width
  flex: 0 0 40%;

  // flex item becoming flex container
  // nested flexboxes
  display: flex;
  align-items: center;
  justify-content: center;

  &__input {
    // input element doesn't inherit global fonts
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    // using pixels because it just needs to be a high num
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    // so button can sit on top of input
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      // when input element is focused its width increases from 90% to 100%
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    // works only in chrome and safari (webkit)
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  // adjacent selector because they're sibs
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      // so button moves down when clicked
      transform: translateY(2px);
    }
  }

  &__icon {
    //   formatting a svg icon by setting h and w
    height: 2rem;
    width: 2rem;
    // changing button color using fill;
    fill: var(--color-grey-dark-3);
  }
}

//======== USER NAVIGATION ==========
.user-nav {
  // overriding align items from header (above)
  align-self: stretch;
  // flex item is now a flex container
  display: flex;
  align-items: center;

  // user nav and all direct children
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    // third level of flex containers
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    // in relation to position relative above
    // flexbox isn't good practice for adjusting notifications
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // flexbox also works with text
    // - centering number of notifications
    display: flex;
    justify-content: center;
    align-items: center;
  }

  // formatted in above universal selector
  // &__user {
  // }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

//======== SIDE NAVIGATION ==========
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    // setting parent element to position relative
    // -- so pseudo element is positioned correctly
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }
  }

  // normal state without any effects
  &__item::before {
    // have to specify content or else it won't show in browser
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    // scaleY only occurs in y direction (top-bottom)
    // default is center
    transform: scaleY(0);
    // transform-origin: bottom;
    // can set different settings for different props
    // width .2s is the delay
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
      background-color 0.1s;
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    // so hover expands to 100%
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    // position specified so z-index works
    position: relative;
    // link on top of before pseudo element
    z-index: 10;

    // look at html to figure out which parent element is the flex container
    display: flex;
    align-items: center;
  }

  // an example of how currentColor works
  // &__link:hover {
  //   color: orangered;
  // }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    // currentColor is color of parent element
    // supported by many browsers
    fill: currentColor;
  }
}

//======== LEGAL TEXT ==========
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

//======== GALLERY ==========

.gallery {
  display: flex;

  &__photo {
    // want flexible elements for responsive design
    // must always define a width and height so img stays fluid
    width: 100%;
    // to avoid having small space underneath img
    //  should always be block if you don't want white space underneath img
    display: block;
  }
}

//======== HOTEL OVERVIEW ==========
.overview {
  display: flex;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-2);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    // grow to occupy all avl space
    // flex is not ideal because element should be size of content
    // flex: 1;
    // now only occupying space it needs and then adds margin
    margin-right: auto;
    // background-color: orangered;
    // using flexbox to remove white space under stars
    // svg elements are treated inline like text items
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    // below is same as above in &__stars
    // margin-left: auto;
    // background-color: orangered;
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    // so it stretches on y axis
    // overriding .overview align-items: center;
    padding: 0 2.25rem;
    align-self: stretch;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    // to reduce space between average and count
    margin-bottom: -3px;
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

//======== BUTTON INLINE ==========
.btn-inline {
  // removing border because btns have border by default
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  // border to have same color as text
  border-bottom: 1px solid currentColor;
  padding: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    color: var(--color-grey-dark-1);
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

//======== ANIMATIONS ==========
@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}
